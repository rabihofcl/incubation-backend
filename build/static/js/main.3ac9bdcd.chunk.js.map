{"version":3,"sources":["containers/Home.js","actions/types.js","actions/auth.js","containers/Login.js","containers/Signup.js","containers/Activate.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","reducers/auth.js","reducers/index.js","store.js","components/Navbar.js","hocs/Layout.js","App.js","index.js"],"names":["Home","className","to","role","LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","ACTIVATION_SUCCESS","ACTIVATION_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","LOGOUT","load_user","dispatch","a","localStorage","getItem","config","headers","axios","get","process","res","type","payload","data","connect","state","isAuthenticated","auth","login","email","password","body","JSON","stringify","post","useState","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","placeholder","required","minLength","signup","first_name","last_name","re_password","accountCreated","setAccountCreated","verify","uid","token","match","verified","setVerified","style","marginTop","onClick","params","reset_password","requestSent","setRequestSent","reset_password_confirm","new_password","re_new_password","initialState","access","refresh","user","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","logout","href","checkAuthenticated","code","props","useEffect","children","App","exact","path","component","Login","Signup","ResetPassword","ResetPasswordConfirm","Activate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ac9bdcd.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction Home() {\n    return (\n        <div className=\"jumbotron container\">\n            <h1 className=\"display-4\">Hello, world!</h1>\n            <p className=\"lead\">This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.</p>\n            <hr className=\"my-4\" />\n            <p>It uses utility classNamees for typography and spacing to space content out within the larger container.</p>\n            <p className =\"lead\">\n            <Link className =\"btn btn-primary btn-lg\" to=\"#\" role=\"button\">Learn more</Link>\n            </p>\n        </div>\n    )\n}\n\nexport default Home\n","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\nexport const LOGOUT = 'LOGOUT';","import axios from 'axios';\nimport {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    PASSWORD_RESET_SUCCESS,\n    PASSWORD_RESET_FAIL,\n    PASSWORD_RESET_CONFIRM_SUCCESS,\n    PASSWORD_RESET_CONFIRM_FAIL,\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    ACTIVATION_SUCCESS,\n    ACTIVATION_FAIL,\n    LOGOUT\n} from './types';\n\nexport const checkAuthenticated = () => async dispatch => {\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        };\n\n        const body = JSON.stringify({ token: localStorage.getItem('access') });\n\n        try {\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify`, body, config)\n\n            if (res.data.code !== 'token_not_valid') {\n                dispatch({\n                    type: AUTHENTICATED_SUCCESS\n                });\n            } else {\n                dispatch({\n                    type: AUTHENTICATED_FAIL\n                });\n            }\n        } catch (err) {\n            dispatch({\n                type: AUTHENTICATED_FAIL\n            });\n        }\n    } else {\n        dispatch({\n            type: AUTHENTICATED_FAIL\n        });\n    }\n};\n\nexport const load_user = () => async dispatch => {\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n                'Accept': 'application/json'\n            }\n        }; \n\n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\n    \n            dispatch({\n                type: USER_LOADED_SUCCESS,\n                payload: res.data\n            });\n        } catch (err) {\n            dispatch({\n                type: USER_LOADED_FAIL\n            });\n        }\n    } else {\n        dispatch({\n            type: USER_LOADED_FAIL\n        });\n    }\n};\n\n\nexport const login = (email, password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ email, password });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        });\n\n        dispatch(load_user());\n    } catch (err) {\n        dispatch({\n            type: LOGIN_FAIL\n        })\n    }\n};\n\nexport const signup = (first_name, last_name, email, password, re_password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ first_name, last_name, email, password, re_password });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\n\n        dispatch({\n            type: SIGNUP_SUCCESS,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: SIGNUP_FAIL\n        })\n    }\n};\n\nexport const verify = (uid, token) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ uid, token });\n\n    try {\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config);\n\n        dispatch({\n            type: ACTIVATION_SUCCESS,\n        });\n    } catch (err) {\n        dispatch({\n            type: ACTIVATION_FAIL\n        })\n    }\n};\n\nexport const reset_password = (email) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ email });\n\n    try {\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\n\n        dispatch({\n            type: PASSWORD_RESET_SUCCESS\n        });\n    } catch (err) {\n        dispatch({\n            type: PASSWORD_RESET_FAIL\n        });\n    }\n};\n\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\n\n    try {\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\n\n        dispatch({\n            type: PASSWORD_RESET_CONFIRM_SUCCESS\n        });\n    } catch (err) {\n        dispatch({\n            type: PASSWORD_RESET_CONFIRM_FAIL\n        });\n    }\n};\n\nexport const logout = () => dispatch => {\n    dispatch({\n        type: LOGOUT\n    });\n};","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login } from '../actions/auth'\n\n\nconst Login = ({ login, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: ''\n    });\n\n    const { email, password } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        login(email, password);\n    };\n\n    if (isAuthenticated) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div className='container mt-5'>\n            <h1>Sign In</h1>\n            <p>Sign into your Account</p>\n            <form onSubmit={e => onSubmit(e)}>\n                <div className='form-group mb-3'>\n                    <input\n                        className='form-control'\n                        type='email'\n                        placeholder='Email'\n                        name='email'\n                        value={email}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-group mb-3 '>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Password'\n                        name='password'\n                        value={password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <button className='btn btn-primary' type='submit'>Login</button>\n            </form>\n            <p className='mt-3'>\n                Don't have an account? <Link to='/signup'>Sign Up</Link>\n            </p>\n            <p className='mt-3'>\n                Forgot your Password? <Link to='/reset-password'>Reset Password</Link>\n            </p>\n        </div>\n\n    );\n\n};\n\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signup } from '../actions/auth';\nimport axios from 'axios';\n\nconst Signup = ({ signup, isAuthenticated }) => {\n    const [accountCreated, setAccountCreated] = useState(false);\n    const [formData, setFormData] = useState({\n        first_name: '',\n        last_name: '',\n        email: '',\n        password: '',\n        re_password: ''\n    });\n\n    const { first_name, last_name, email, password, re_password } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        if (password === re_password) {\n            signup(first_name, last_name, email, password, re_password);\n            setAccountCreated(true);\n        }\n    };\n\n    if (isAuthenticated) {\n        return <Redirect to='/' />\n    }\n    if (accountCreated) {\n        return <Redirect to='/login' />\n    }\n\n    return (\n        <div className='container mt-5'>\n            <h1>Sign Up</h1>\n            <p>Create your Account</p>\n            <form onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='text'\n                        placeholder='First Name*'\n                        name='first_name'\n                        value={first_name}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='text'\n                        placeholder='Last Name*'\n                        name='last_name'\n                        value={last_name}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='email'\n                        placeholder='Email*'\n                        name='email'\n                        value={email}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Password*'\n                        name='password'\n                        value={password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Confirm Password*'\n                        name='re_password'\n                        value={re_password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <button className='btn btn-primary' type='submit'>Register</button>\n            </form>\n            <p className='mt-3'>\n                Already have an account? <Link to='/login'>Sign In</Link>\n            </p>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { signup })(Signup);","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { verify } from '../actions/auth';\n\nconst Activate = ({ verify, match }) => {\n    const [verified, setVerified] = useState(false);\n\n    const verify_account = e => {\n        const uid = match.params.uid;\n        const token = match.params.token;\n\n        verify(uid, token);\n        setVerified(true);\n    };\n\n    if (verified) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div className='container'>\n            <div \n                className='d-flex flex-column justify-content-center align-items-center'\n                style={{ marginTop: '200px' }}\n            >\n                <h1>Verify your Account:</h1>\n                <button\n                    onClick={verify_account}\n                    style={{ marginTop: '50px' }}\n                    type='button'\n                    className='btn btn-primary'\n                >\n                    Verify\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default connect(null, { verify })(Activate);","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { reset_password } from '../actions/auth';\n\nconst ResetPassword = ({ reset_password }) => {\n    const [requestSent, setRequestSent] = useState(false);\n    const [formData, setFormData] = useState({\n        email: ''\n    });\n\n    const { email } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        reset_password(email);\n        setRequestSent(true);\n    };\n\n    if (requestSent) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div className='container mt-5'>\n            <h1>Request Password Reset:</h1>\n            <form onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='email'\n                        placeholder='Email'\n                        name='email'\n                        value={email}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\n            </form>\n        </div>\n    );\n};\n\nexport default connect(null, { reset_password })(ResetPassword);","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { reset_password_confirm } from '../actions/auth';\n\nconst ResetPasswordConfirm = ({ match, reset_password_confirm }) => {\n    const [requestSent, setRequestSent] = useState(false);\n    const [formData, setFormData] = useState({\n        new_password: '',\n        re_new_password: ''\n    });\n\n    const { new_password, re_new_password } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        const uid = match.params.uid;\n        const token = match.params.token;\n\n        reset_password_confirm(uid, token, new_password, re_new_password);\n        setRequestSent(true);\n    };\n\n    if (requestSent) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div className='container mt-5'>\n            <form onSubmit={e => onSubmit(e)}>\n            <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='New Password'\n                        name='new_password'\n                        value={new_password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Confirm New Password'\n                        name='re_new_password'\n                        value={re_new_password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\n            </form>\n        </div>\n    );\n};\n\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);","import {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    PASSWORD_RESET_SUCCESS,\n    PASSWORD_RESET_FAIL,\n    PASSWORD_RESET_CONFIRM_SUCCESS,\n    PASSWORD_RESET_CONFIRM_FAIL,\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    ACTIVATION_SUCCESS,\n    ACTIVATION_FAIL,\n    LOGOUT\n} from '../actions/types';\n\nconst initialState = {\n    access: localStorage.getItem('access'),\n    refresh: localStorage.getItem('refresh'),\n    isAuthenticated: null,\n    user: null\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case AUTHENTICATED_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: true\n            }\n        case LOGIN_SUCCESS:\n            localStorage.setItem('access', payload.access);\n            return {\n                ...state,\n                isAuthenticated: true,\n                access: payload.access,\n                refresh: payload.refresh\n            }\n        case SIGNUP_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: false\n            }\n        case USER_LOADED_SUCCESS:\n            return {\n                ...state,\n                user: payload\n            }\n        case AUTHENTICATED_FAIL:\n            return {\n                ...state,\n                isAuthenticated: false \n            }\n        case USER_LOADED_FAIL:\n            return {\n                ...state,\n                user: null\n            }\n        case LOGIN_FAIL:\n        case SIGNUP_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('access');\n            localStorage.removeItem('refresh');\n            return {\n                ...state,\n                access: null,\n                refresh: null,\n                isAuthenticated: false,\n                user: null\n            }\n        case PASSWORD_RESET_SUCCESS:\n        case PASSWORD_RESET_FAIL:\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\n        case PASSWORD_RESET_CONFIRM_FAIL:\n        case ACTIVATION_SUCCESS:\n        case ACTIVATION_FAIL:\n            return {\n                ...state\n            }\n        default:\n            return state\n    }\n};","import { combineReducers } from 'redux';\nimport auth from './auth';\n\nexport default combineReducers({\n    auth\n});","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/auth'\n\nfunction Navbar({ logout, isAuthenticated }) {\n    const guestLinks = () => (\n        <Fragment>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/login\">Login</Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/signup\">Signup</Link>\n            </li>\n        </Fragment>\n    );\n\n    const authLinks = () => (\n        <li className=\"nav-item\">\n            <Link className=\"nav-link\" href=\"#!\" onClick={logout}>Logout</Link>\n        </li>\n    );\n\n    return (\n        <nav className=\"navbar navbar-expand-sm bg-light navbar-light\">\n            <div className=\"container-fluid\">\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link active\" to=\"/\">Incubation</Link>\n                    </li>\n                    {isAuthenticated ? authLinks() : guestLinks()}\n                </ul>\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, { logout })(Navbar)\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Navbar from '../components/Navbar';\nimport { checkAuthenticated, load_user } from '../actions/auth'\n\nconst Layout = (props) => {\n    useEffect(() => {\n        props.checkAuthenticated();\n        props.load_user();\n    }, []);\n\n    return(\n        <div>\n            <Navbar />\n            {props.children}\n        </div>\n    )\n};\n\nexport default connect(null, { checkAuthenticated, load_user }) (Layout);","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Home from './containers/Home';\nimport Login from './containers/Login';\nimport Signup from './containers/Signup';\nimport Activate from './containers/Activate';\nimport ResetPassword from './containers/ResetPassword';\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport Layout from \"./hocs/Layout\";\n\n\nconst App = () => (\n  <Provider store={store}>\n    <Router>\n      <Layout>\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/login' component={Login} />\n          <Route exact path='/signup' component={Signup} />\n          <Route exact path='/reset-password' component={ResetPassword} />\n          <Route exact path='/password/reset/confirm/:uid/:token' component={ResetPasswordConfirm} />\n          <Route exact path='/activate/:uid/:token' component={Activate} />\n        </Switch>\n      </Layout>\n    </Router>\n  </Provider>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}